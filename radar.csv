name,ring,quadrant,isNew,description
Angular,Adopt,Miscellaneous,TRUE,<p><a href="https://angular.io/">Angular</a> has been the framework of choice for CompSci web applications for several years. The <a href="https://jacksonlaboratory.atlassian.net/wiki/spaces/MP/pages/167641109/UI+Framework">most recent assessment</a> of Angular’s use was done as part of the <a href="https://jacksonlaboratory.atlassian.net/wiki/spaces/MP/pages/155025430/MPD+Redesign+Technology+Decisions">technology review</a> of the MPD redesign which started in July of 2022.</p>
Google Tag Manager,Assess,Miscellaneous,TRUE,<p><a href="https://tagmanager.google.com/">Google Tag Manager</a> is a tracking tool and management platform that allows you to install code fragment (tags) to your website without modifying any code. With GTM you can create a single container that can manages data collection for each of the tools you want included on your page. It works with <a href="https://support.google.com/tagmanager/answer/6106924?hl=en">a number of tools</a> including <a href="https://analytics.google.com/">Google Analytics</a> and many third party tag solutions such as <a href="https://www.crazyegg.com/">Crazy Egg</a> which helps with customer journey mapping. This is a commercial tool for which which JAX has a license.</p><p>Setup and configuration is fairly straightforward and would be identical for each Angular application making it a good candidate for adoption across our applications.</p>
Google Analytics,Assess,Miscellaneous,TRUE,<p>Google Analytics is a web analytics tool you can use to track and analyze the performance of your website or app. It collects data related to user acquisition and engagement as well as demographics. This data is critical for helping develop requirements and make design decisions for our applications.</p>
Nx,Adopt,Tools,TRUE,<p><a href="https://nx.dev/">Nx</a> is a build system designed to increase developer quality of life through dependency management, code generation tools, and efficient build execution. Its ecosystem includes ESLint, Prettier, Jest, Cypress, and Storybook which are all tools that are considered for adoption in the tech radar. It was evaluated in July of 2022 and documentation can be found <a href="https://jacksonlaboratory.atlassian.net/wiki/spaces/MP/pages/168099887/Angular+CLI">here</a> in a comparison to the default Angular CLI.</p>
Jest,Adopt,Tools,TRUE,<p><a href="https://jestjs.io/">Jest</a> is a "delightful" JavaScript testing framework. It is included the Nx build system and was evaluated in July of 2022. The documentation can be found <a href="https://jacksonlaboratory.atlassian.net/wiki/spaces/MP/pages/167084766/Frontend+Testing+Framework">here</a>.</p>
Cypress,Trial,Tools,TRUE,<p><a href="https://www.cypress.io/">Cypress</a> is an end-to-end testing framework which has become the dominant choice in Angular applications. Angular will <a href="https://github.com/angular/protractor/issues/5502">no longer be supporting Protractor</a> as robust alternative solutions, such as Cypress, have emerged since Protractor was developed. It is one of the dependencies includes in the Nx build system.</p>
Storybook,Assess,Tools,TRUE,<p><a href="https://storybook.js.org/docs/angular/get-started/introduction">Storybook</a> is a tool for UI development. It makes development faster and easier by isolating components. This allows you to work on one component at a time. You can develop entire UIs without needing to start up a complex dev stack, force certain data into your database, or navigate around your application.</p><p>Storybook is part of the Nx ecosystem. The concept fits well with what we are trying to accomplish in CompSci but we still need to determine if the benefits are worth the allocation of resources to maintaining it and if there is a reasonable learning curve such that UI developers in the department are able to adopt its usage.</p>
PrimeNg,Adopt,Libraries,TRUE,<p><a href="https://www.primefaces.org/primeng/setup">PrimeNg</a> is an open source native Angular UI component library. PrimeNg is now the main component library of a number of CompSci applications. It was evaluated in July 2022 and the confluence page can be found <a href="https://jacksonlaboratory.atlassian.net/wiki/spaces/MP/pages/168165410/UI+Component+Library">here</a>.</p>
RxJs,Adopt,Libraries,TRUE,<p><a href="https://rxjs.dev/">RxJS</a> is a library for <a href="https://en.wikipedia.org/wiki/Reactive_programming">Reactive programming</a> that makes it easier to compose asynchronous or callback-based code. As an opinionated framework Angular, by default, imports the RxJs library which is reason enough to consider its usage as a standard in our applications. The alternative is to use imperative programming which, although much simpler, does not take advantage of some of the innate abilities of Angular.</p><p><a href="https://jacksonlaboratory.atlassian.net/wiki/spaces/MP/pages/180551689/RxJs">A technology review</a> was completed in July 2022.</p>
MonoRepo/MultiRepo,Assess,Techniques,TRUE,<p>Code management with Angular is mainly done in a mono-repo or a multi-repo configuration.</p><p>The mono-repo structure centralizes dependency management and is designed to promote easy to access and reusable code and makes it easier to see the impact of refactoring. Some disadvantages include performance, more complicated CI/CD configurations, and an inability to secure separate parts of the code base. A number of the large tech companies have taken this approach but have had to build customized tools to do so effectively.</p><p>The multi-repo approach separates the code into multiple projects. This structure allows for separate versioning and management of dependencies which makes CI/CD easier to implement. Performance is fast and each project has full control over who can access the code base. Some disadvantages include syncing of dependencies across projects and best practices are more difficult to maintain across the code base.</p>
Facade Pattern,Assess,Techniques,TRUE,<p>The <a href="https://en.wikipedia.org/wiki/Facade_pattern">facade pattern</a> is a design pattern commonly used in object-oriented programming. It is an interface that hides complexity in order to improve readability and usability of code. It is well-suited to be used in Angular applications where complex components (the presentation layer) may be required to interact with many services while maintain state. The facade interface is used to decouple the business logic from the presentation layer. The presentation layer’s responsibilities become presentation and delegation. It knows what to display and what to do but delegates user actions to the abstraction layer. The abstraction layer then translates the actions into calls to services and changes in state.</p><p>The advantages of this architecture is that there is a clear separation of concerns. This leads to code that is easier to understand and maintain. One of the biggest advantages of all is that it simplifies testing significantly. Because a component only needs to mock the facade there is no mocking of any services or state management. Component tests can focus on ensuring that user interactions are delegated appropriately to the facade and data is displayed as expected.</p><p>Here is an excellent <a href="https://dev-academy.com/angular-architecture-best-practices/">article about this approach</a> that provides a detailed example.</p>
